---
export interface Props {
  variant?: 'default' | 'emergency';
  service?: 'plumbing' | 'electrical';
}

const { variant = 'default', service } = Astro.props;
---

<!-- Sticky Floating CTA -->
<div
  id="sticky-booking-cta"
  class="fixed bottom-6 left-6 right-6 z-50 transition-all duration-300 transform translate-y-0 opacity-100 md:left-auto md:right-6 md:w-80"
  style="transition-property: transform, opacity;"
>
  <!-- Main CTA Button -->
  <div class={`rounded-2xl shadow-2xl backdrop-blur-md border overflow-hidden ${
    variant === 'emergency'
      ? 'bg-red-600/95 border-red-500/20'
      : service === 'plumbing'
        ? 'bg-blue-600/95 border-blue-500/20'
        : service === 'electrical'
          ? 'bg-amber-600/95 border-amber-500/20'
          : 'bg-stone-800/95 border-stone-700/20'
  }`}>

    <!-- Quick Action Header -->
    <div class="px-4 py-3 border-b border-white/10">
      <div class="flex items-center justify-between">
        <div class="flex items-center space-x-2">
          <span class="w-2 h-2 bg-white rounded-full animate-pulse"></span>
          <span class="text-white text-sm font-semibold">
            {variant === 'emergency' ? 'Need Emergency Help?' : 'Ready to Book?'}
          </span>
        </div>
        <button
          id="close-sticky-cta"
          class="text-white/70 hover:text-white p-1 rounded touch-manipulation"
          aria-label="Close booking widget"
        >
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
          </svg>
        </button>
      </div>
    </div>

    <!-- CTA Content -->
    <div class="p-4">
      <div class="space-y-3">
        <!-- Primary Action -->
        <button
          id="open-booking-form"
          class="w-full bg-white hover:bg-stone-50 text-stone-800 py-3 px-4 rounded-xl font-bold text-sm transition-all duration-200 shadow-lg hover:shadow-xl transform hover:scale-[1.02] active:scale-[0.98] touch-manipulation"
        >
          <div class="flex items-center justify-center gap-2">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"/>
            </svg>
            <span>Get Free Estimate</span>
          </div>
        </button>

        <!-- Emergency Call Option -->
        <div class="flex space-x-2">
          <a
            href="tel:6722003045"
            class="flex-1 bg-white/10 hover:bg-white/20 backdrop-blur-sm text-white border border-white/20 hover:border-white/40 py-2 px-3 rounded-lg text-xs font-semibold transition-all duration-200 touch-manipulation text-center"
          >
            <div class="flex items-center justify-center gap-1">
              <svg class="w-3 h-3" fill="currentColor" viewBox="0 0 24 24">
                <path d="M6.62 10.79c1.44 2.83 3.76 5.14 6.59 6.59l2.2-2.2c.27-.27.67-.36 1.02-.24 1.12.37 2.33.57 3.57.57.55 0 1 .45 1 1V20c0 .55-.45 1-1 1-9.39 0-17-7.61-17-17 0-.55.45-1 1-1h3.5c.55 0 1 .45 1 1 0 1.25.2 2.45.57 3.57.11.35.03.74-.25 1.02l-2.2 2.2z"/>
              </svg>
              <span>Call Now</span>
            </div>
          </a>

          <button
            id="show-form-preview"
            class="flex-1 bg-white/10 hover:bg-white/20 backdrop-blur-sm text-white border border-white/20 hover:border-white/40 py-2 px-3 rounded-lg text-xs font-semibold transition-all duration-200 touch-manipulation text-center"
          >
            <div class="flex items-center justify-center gap-1">
              <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>
              </svg>
              <span>Quick Form</span>
            </div>
          </button>
        </div>

        <!-- Trust Indicator -->
        <div class="text-center">
          <div class="text-white/80 text-xs">
            <span class="font-medium">Free estimates</span> â€¢
            <span>Response in 15 min</span>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Booking Form Modal -->
<div
  id="booking-modal"
  class="fixed inset-0 bg-black/50 backdrop-blur-sm z-60 hidden flex items-center justify-center p-4"
>
  <div class="bg-white rounded-2xl shadow-2xl w-full max-w-lg max-h-[90vh] overflow-y-auto">
    <!-- Modal Header -->
    <div class="sticky top-0 bg-white border-b border-stone-200 px-6 py-4 rounded-t-2xl">
      <div class="flex items-center justify-between">
        <h3 class="text-xl font-bold text-stone-800">Book Your Service</h3>
        <button
          id="close-booking-modal"
          class="text-stone-400 hover:text-stone-600 p-2 rounded-lg hover:bg-stone-100 transition-colors touch-manipulation"
          aria-label="Close booking form"
        >
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
          </svg>
        </button>
      </div>
    </div>

    <!-- Modal Content -->
    <div class="p-6">
      <slot>
        <!-- Booking form will be inserted here -->
        <div class="text-center py-8 text-stone-500">
          <p>Booking form will be displayed here</p>
        </div>
      </slot>
    </div>
  </div>
</div>

<!-- Enhanced JavaScript for Sticky CTA -->
<script>
  document.addEventListener('DOMContentLoaded', function() {
    const stickyCTA = document.getElementById('sticky-booking-cta');
    const bookingModal = document.getElementById('booking-modal');
    const openFormBtn = document.getElementById('open-booking-form');
    const showPreviewBtn = document.getElementById('show-form-preview');
    const closeModalBtn = document.getElementById('close-booking-modal');
    const closeStickyBtn = document.getElementById('close-sticky-cta');

    let isVisible = true;
    let lastScrollY = 0;

    // Sticky CTA scroll behavior
    function handleScroll() {
      const currentScrollY = window.scrollY;
      const scrollDiff = Math.abs(currentScrollY - lastScrollY);

      // Show/hide based on scroll direction and position
      if (currentScrollY < 100) {
        // Always show when near top
        showStickyCTA();
      } else if (currentScrollY > lastScrollY && scrollDiff > 10) {
        // Hide when scrolling down
        hideStickyCTA();
      } else if (currentScrollY < lastScrollY && scrollDiff > 10) {
        // Show when scrolling up
        showStickyCTA();
      }

      lastScrollY = currentScrollY;
    }

    function showStickyCTA() {
      if (!isVisible) {
        stickyCTA.style.transform = 'translateY(0)';
        stickyCTA.style.opacity = '1';
        isVisible = true;
      }
    }

    function hideStickyCTA() {
      if (isVisible) {
        stickyCTA.style.transform = 'translateY(100%)';
        stickyCTA.style.opacity = '0';
        isVisible = false;
      }
    }

    // Open booking modal
    function openBookingModal() {
      bookingModal.classList.remove('hidden');
      document.body.style.overflow = 'hidden';

      // Track modal open for analytics
      if (typeof gtag !== 'undefined') {
        gtag('event', 'booking_modal_open', {
          event_category: 'engagement',
          event_label: 'sticky_cta'
        });
      }
    }

    // Close booking modal
    function closeBookingModal() {
      bookingModal.classList.add('hidden');
      document.body.style.overflow = '';
    }

    // Close sticky CTA permanently (for this session)
    function closeStickyPermanently() {
      stickyCTA.style.display = 'none';
      sessionStorage.setItem('stickyCTAclosed', 'true');
    }

    // Event listeners
    window.addEventListener('scroll', handleScroll, { passive: true });
    openFormBtn?.addEventListener('click', openBookingModal);
    showPreviewBtn?.addEventListener('click', openBookingModal);
    closeModalBtn?.addEventListener('click', closeBookingModal);
    closeStickyBtn?.addEventListener('click', closeStickyPermanently);

    // Close modal on backdrop click
    bookingModal?.addEventListener('click', function(e) {
      if (e.target === bookingModal) {
        closeBookingModal();
      }
    });

    // Close modal on Escape key
    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape' && !bookingModal.classList.contains('hidden')) {
        closeBookingModal();
      }
    });

    // Check if CTA was previously closed
    if (sessionStorage.getItem('stickyCTAclosed') === 'true') {
      stickyCTA.style.display = 'none';
    }

    // Auto-show after user spends time on page
    setTimeout(() => {
      if (window.scrollY > 500 && sessionStorage.getItem('stickyCTAclosed') !== 'true') {
        showStickyCTA();
      }
    }, 10000); // Show after 10 seconds if not already closed

    // Show CTA when user reaches bottom of page
    function checkIfNearBottom() {
      const scrollPosition = window.scrollY + window.innerHeight;
      const documentHeight = document.documentElement.scrollHeight;

      if (scrollPosition >= documentHeight - 200) {
        showStickyCTA();
      }
    }

    window.addEventListener('scroll', checkIfNearBottom, { passive: true });
  });
</script>

<style>
  /* Ensure smooth animations */
  #sticky-booking-cta {
    will-change: transform, opacity;
  }

  /* Backdrop blur fallback */
  @supports not (backdrop-filter: blur(12px)) {
    #sticky-booking-cta > div {
      background: rgba(0, 0, 0, 0.9);
    }
  }

  /* Hide scrollbar in modal on mobile */
  @media (max-width: 768px) {
    #booking-modal > div {
      max-height: 95vh;
    }
  }
</style>