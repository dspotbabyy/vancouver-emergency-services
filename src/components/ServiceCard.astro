---
import OptimizedImage from './OptimizedImage.astro';

export interface Props {
  title: string;
  description: string;
  price?: string;
  features: string[];
  urgent?: boolean;
  image?: string;
  imageAlt?: string;
}

const { title, description, price, features, urgent = false, image, imageAlt } = Astro.props;
---

<div class={`bg-white border border-stone-200 rounded-2xl overflow-hidden hover:shadow-lg transition-all duration-300 hover:border-stone-300 ${urgent ? 'ring-1 ring-stone-300' : ''}`}>
  <!-- Service Image Header -->
  {image && (
    <div class="relative aspect-[16/9] overflow-hidden">
      <OptimizedImage
        src={image}
        alt={imageAlt || `Professional ${title.toLowerCase()} service`}
        class="w-full h-full object-cover"
        loading="lazy"
        width={400}
        height={225}
        aspectRatio="16/9"
        sizes="(max-width: 768px) 100vw, (max-width: 1024px) 50vw, 33vw"
      />
      <div class="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent"></div>

      {urgent && (
        <div class="absolute top-4 left-4">
          <div class="flex items-center space-x-2 bg-amber-500/90 backdrop-blur-sm px-3 py-1.5 rounded-full">
            <span class="w-2 h-2 bg-white rounded-full animate-pulse"></span>
            <span class="text-xs text-white font-bold tracking-wide uppercase">
              Priority Service
            </span>
          </div>
        </div>
      )}
    </div>
  )}

  <div class="p-8">
    {!image && urgent && (
      <div class="flex items-center gap-2 mb-6">
        <div class="flex items-center space-x-2">
          <span class="w-2 h-2 bg-amber-400 rounded-full animate-pulse"></span>
          <span class="text-xs text-stone-600 font-medium tracking-wide uppercase">
            Priority Service
          </span>
        </div>
      </div>
    )}

    <div class="space-y-6">
    <div>
      <h3 class="text-xl font-medium text-stone-800 mb-2">{title}</h3>
      <p class="text-stone-600 text-sm leading-relaxed">{description}</p>
    </div>

    {price && (
      <div class="flex items-baseline space-x-2">
        <span class="text-2xl font-light text-stone-800">{price}</span>
        <span class="text-stone-500 text-xs font-medium">starting rate</span>
      </div>
    )}

    <ul class="space-y-3">
      {features.map(feature => (
        <li class="flex items-start space-x-3 text-sm text-stone-600">
          <div class="w-1.5 h-1.5 bg-stone-400 rounded-full mt-2 flex-shrink-0"></div>
          <span>{feature}</span>
        </li>
      ))}
    </ul>

    <div class="pt-2">
      <button class={`w-full py-3.5 px-4 rounded-full font-medium transition-all duration-200 text-sm ${
        urgent
          ? 'bg-stone-800 hover:bg-stone-700 text-white shadow-sm hover:shadow-md'
          : 'bg-stone-100 hover:bg-stone-200 text-stone-800 border border-stone-200 hover:border-stone-300'
      }`}>
        {urgent ? 'Call for Emergency Service' : 'Request Service Quote'}
      </button>
    </div>
    </div>
  </div>
</div>